# -*- coding: utf-8 -*-
#
# @PROJECT_NAME@ documentation build configuration file, created by
# sphinx-quickstart on Wed Jun  8 08:00:30 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import subprocess
# sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.todo',
    'sphinx.ext.imgmath',
    'sphinx.ext.ifconfig',
    'sphinxcontrib.manpage',
    'sphinxcontrib.blockdiag',
    'sphinxcontrib.seqdiag',
    'sphinxcontrib.actdiag'
]

# Substitutions for common names. Key is replaced value in the text of all .rst # documents.
substs = {
    "sc-config-file": "@SC_CONFIG_FILE@",
    "bridge-device": "@SC_BRIDGE_DEVICE_CONFIG_FILE_VAR@",
    "keep-containers-alive": "@SC_KEEP_CONTAINERS_ALIVE_CONFIG_FILE_VAR@",
    "use-session-bus": "@SC_USE_SESSION_BUS_CONFIG_FILE_VAR@",
    "shutdown-timeout": "@SC_SHUTDOWN_TIMEOUT_CONFIG_FILE_VAR@",
    "shared-mounts-dir": "@SC_SHARED_MOUNTS_DIR_CONFIG_FILE_VAR@",
    "lxc-config-path": "@SC_LXC_CONFIG_PATH_CONFIG_FILE_VAR@",
    "service-manifest-dir": "@SC_SERVICE_MANIFEST_DIR_CONFIG_FILE_VAR@",
    "default-service-manifest-dir": "@SC_DEFAULT_SERVICE_MANIFEST_DIR_CONFIG_FILE_VAR@"
}

# Duplicate all entries with different formatting options
# This ensures that even formatted versions of the words in substs variable
# get substituted
for key in substs.keys():
    substs[key + "-code"] = "``" + substs[key] + "``"
    substs[key + "-emph"] = "`" + substs[key] + "`"

# Substitutes all keys in substs variable with their values in that map
rst_epilog = ""
for key in substs.keys():
    rst_epilog += ".. |%s| replace:: %s\n" % (key, substs[key])

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']
source_suffix = '.rst'
master_doc = 'index'

# General information about the project.
project = u'@PROJECT_NAME@'
copyright = u'2016, Pelagicore AB'
author = u'Pelagicore AB'

version = u'@VERSION@'
release = u"@VERSION@-@REVISION@ @DATE@"

language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for seqdiag  -------------------------------------------------

# SVGs look much less blurry
seqdiag_html_image_format = "SVG"
seqdiag_antialias = True

# -- Options for actdiag --------------------------------------------------
actdiag_antialias = True
actdiag_html_image_format = "SVG"



# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# html_logo = None
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []

# Output file base name for HTML help builder.
htmlhelp_basename = '@PROJECT_NAME@doc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    'papersize': 'a4paper',
    'pointsize': '10pt',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, '@PROJECT_NAME@.tex', u'@PROJECT_NAME@ Documentation',
     u'Pelagicore AB', 'manual'),
]

# latex_logo = None
# latex_show_pagerefs = False

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, '@PROJECT_NAME@', u'@PROJECT_NAME@ Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, '@PROJECT_NAME@', u'@PROJECT_NAME@ Documentation',
     author, '@PROJECT_NAME@', 'One line description of project.',
     'Miscellaneous'),
]
